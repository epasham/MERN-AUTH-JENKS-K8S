export interface EmptyError extends Error {
}

export interface EmptyErrorCtor {
  new(): EmptyError;
}

<<<<<<< HEAD
const EmptyErrorImpl = (() => {
  function EmptyErrorImpl(this: any) {
    Error.call(this);
    this.message = 'no elements in sequence';
    this.name = 'EmptyError';
    return this;
  }

  EmptyErrorImpl.prototype = Object.create(Error.prototype);

  return EmptyErrorImpl;
})();
=======
function EmptyErrorImpl(this: any) {
  Error.call(this);
  this.message = 'no elements in sequence';
  this.name = 'EmptyError';
  return this;
}

EmptyErrorImpl.prototype = Object.create(Error.prototype);
>>>>>>> e547b3e77583be3c8de92b6c78317e2fb285a75a

/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */
export const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;